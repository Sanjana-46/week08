name: Backend CI - Test, Build and Push Images to ACR

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend_ci.yml'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ACR_LOGIN_SERVER: sit722studentacr.azurecr.io
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node backend (if exists)
      - name: Setup Node
        if: hashFiles('backend/**/package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps (npm)
        if: hashFiles('backend/**/package.json') != ''
        working-directory: backend
        run: npm ci

      - name: Test (npm)
        if: hashFiles('backend/**/package.json') != ''
        working-directory: backend
        run: npm test --if-present

      # Python backend (if exists)
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        if: hashFiles('backend/product_service/**') != ''
        working-directory: backend/product_service
        run: pytest tests --maxfail=1 --disable-warnings -q || true

      - name: Run order_service tests
        if: hashFiles('backend/order_service/**') != ''
        working-directory: backend/order_service
        run: pytest tests --maxfail=1 --disable-warnings -q || true

  build_and_push_images:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker login to ACR
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: sit722studentacr.azurecr.io

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }} ./backend/
          docker tag  ${{ env.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }} ${{ env.ACR_LOGIN_SERVER }}/backend:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/backend:latest
